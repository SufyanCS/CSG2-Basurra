@{
    @model Coders_Zone.Models.CoursesViewModel

}
@{
    var userName = "";
    if (Model.UserId > 0 && Model.Users != null)
    {
        var user = Model.Users.FirstOrDefault(u => u.Id == Model.UserId);
        if (user != null)
        {
            userName = user.Username;
        }
    }
}
<!DOCTYPE html>
<html>
    <head>
        <title>Courses Page</title>
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .main-color ul li svg {
            color:rgb(226, 118, 30);
        }

        .btn-color {
            background-color: rgb(226, 118, 30);
            color: white;
            transition: background-color 0.3s, color 0.3s;
        }

            .btn-color:hover{
                background-color: rgba(226, 118, 30, 0.8);
                color: white;
            }
            .view-course{
                color:rgb(226, 118, 30);
            transition: color 0.3s, color 0.3s;
            }

            .view-course:hover {
                color: rgb(226, 118, 30, 0.8);
            }
        .transition {
            transition: transform 0.3s;
            transform-style: preserve-3d;
            transform: perspective(1000px);
        }

            .transition:hover {
                transform: scale(1.02) translateY(-5px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }
    </style>
    </head>

    <body>
        <div class="">
            <div class="row my-4">
                <div class="col-md-6">
                <h2 class="mx-3">
                    @if (!string.IsNullOrEmpty(userName))
                    {
                        <text>Welcome @userName, Explore Our Courses</text>
                    }
                    else
                    {
                        <text>Welcome Guest, Explore Our Courses</text>
                    }
                </h2>
                </div>
                <div class="col-md-6 d-flex">

                    <div class="search-input w-100">
                        <form action="/Courses" method="get">
                            <div class="input-group">
                                <input type="text" placeholder="Search about course name..." class="form-control" id="search" name="search">
                                <button type="submit" class="btn btn-base">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search">
                                        <circle cx="11" cy="11" r="8"></circle>
                                        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                                    </svg>
                                </button>
                            </div>
                        </form>
                    </div>

                </div>
            </div>
            <div class="row mx-3">
                <div class="col-md-8">
                     @if (Model.Courses.Count == 0)
    {
        <p>No courses found.</p>
    }
    else
    {
                @foreach (var course in Model.Courses)
                {
                    <div class="card transition mb-3 shadow">
                            <div class="row g-0">
                                <div class="col-md-5">
                                    <img src="@course.CoverImage" class="img-fluid rounded-start w-100 h-100" alt="...">
                                </div>
                                <div class="col-md-7">
                                    <div class="card-body">
                                        <p class="font-weight-bolder">@course.Category</p>
                                        <h4 class="card-title font-weight-bold">@course.Name</h4>
                                        <div class="row">
                                        <div class="col main-color">
                                            <ul class="list-unstyled d-flex justify-content-between p-4 small">
                                                <li class="">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-mortarboard-fill " viewBox="0 0 16 16">
                                                            <path d="M8.211 2.047a.5.5 0 0 0-.422 0l-7.5 3.5a.5.5 0 0 0 .025.917l7.5 3a.5.5 0 0 0 .372 0L14 7.14V13a1 1 0 0 0-1 1v2h3v-2a1 1 0 0 0-1-1V6.739l.686-.275a.5.5 0 0 0 .025-.917z" />
                                                            <path d="M4.176 9.032a.5.5 0 0 0-.656.327l-.5 1.7a.5.5 0 0 0 .294.605l4.5 1.8a.5.5 0 0 0 .372 0l4.5-1.8a.5.5 0 0 0 .294-.605l-.5-1.7a.5.5 0 0 0-.656-.327L8 10.466z" />
                                                        </svg>
                                                         students
                                                    </li>
                                                    <li>
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-bar-chart-fill" viewBox="0 0 16 16">
                                                            <path d="M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z" />
                                                        </svg>
                                                    @course.Level
                                                </li>
                                                    <li>
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-journals" viewBox="0 0 16 16">
                                                            <path d="M5 0h8a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2 2 2 0 0 1-2 2H3a2 2 0 0 1-2-2h1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1H1a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v9a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1H3a2 2 0 0 1 2-2" />
                                                            <path d="M1 6v-.5a.5.5 0 0 1 1 0V6h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V9h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 2.5v.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1H2v-.5a.5.5 0 0 0-1 0" />
                                                        </svg>
                                                    @course.NumLessons Lessons
                                                </li>
                                                </ul>
                                            </div>
                                        </div>
                                        <hr />
                                        <div class="d-flex justify-content-end">
                                            <a href="@Url.Action("CourseDetails", "Courses", new { id = course.Id })" class="btn btn-link view-course text-decoration-none p-0 fw-bold">View more</a>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    }
                </div>
                <div class="col-md-4">
                    <div class="card mb-3 bg-light shadow">
                        <div class="card-body">
                        <form id="filterForm" action="/Courses" method="get">
                                <div class="form-group">
                                    <h3 class="card-title font-weight-bold">Filters</h3>

                                    <h5 class="font-weight-bold pt-4">Category</h5>
                                @foreach (var category in Model.Categories)
                                {
                                    var categoryCoursesCount = Model.Courses.Count(c => c.Category == category);


                                    <div class="form-check py-1 d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <input class="form-check-input border-dark" type="checkbox" name="category" value="@category">
                                            <label class="form-check-label text-dark mx-2">@category</label>
                                        </div>
                                        <div>@categoryCoursesCount courses</div>
                                    </div>
                                }

                                </div>

                                <div class="form-group">
                                    <h5 class="font-weight-bold pt-4">Level</h5>
                                @foreach (var level in new List<string> { "All levels", "Beginning", "Intermediate", "Expert" })

                                {
                                    var levelCoursesCount = Model.Courses.Count(c => c.Level == level);

                                    <div class="form-check py-1 d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <input class="form-check-input border-dark" type="checkbox" name="level" value="@level">
                                            <label class="form-check-label text-dark mx-2">@level</label>
                                        </div>
                                        <div>@levelCoursesCount courses</div>
                                    </div>
                                }

                                </div>
                            <button type="submit" class="btn btn-color w-100 mt-3">Apply Filters</button>

                            </form>
                        
                        </div>
                    </div>
                </div>
    </body>
</html>

